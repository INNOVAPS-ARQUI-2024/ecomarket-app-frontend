name: Deploy to PROD

on:
  push:
    tags:
      - 'v*'

jobs:
  deploy-to-PROD:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build Angular app
        run: npm run build -- --configuration production

      - name: Create Dockerfile for Angular App
        run: |
          echo 'FROM nginx:alpine' > Dockerfile
          echo 'COPY dist/ecomarket-app-frontend /usr/share/nginx/html' >> Dockerfile
          echo 'EXPOSE 80' >> Dockerfile

      - name: Build Docker Image
        run: docker build -t ecomarket-app-frontend:PROD .

      - name: Save Docker Image to Tar File
        run: docker save ecomarket-app-frontend:PROD -o ecomarket-app-frontend-PROD.tar

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Copy Docker Image to PROD Server
        run: |
          sshpass -p "${{ secrets.PROD_SERVER_PASSWORD }}" scp -P ${{ secrets.PROD_SERVER_PORT }} -o StrictHostKeyChecking=no ecomarket-app-frontend-prod.tar ${{ secrets.PROD_SERVER_USER }}@${{ secrets.PROD_SERVER_HOST }}:/tmp/ecomarket-app-frontend-prod.tar

      - name: Run Deployment Script on PROD Server
        run: |
          sshpass -p "${{ secrets.PROD_SERVER_PASSWORD }}" ssh -p ${{ secrets.PROD_SERVER_PORT }} -o StrictHostKeyChecking=no ${{ secrets.PROD_SERVER_USER }}@${{ secrets.PROD_SERVER_HOST }} "/home/estudiante/scripts/deploy_docker_image-ecomarket-app-frontend-prod.sh"
